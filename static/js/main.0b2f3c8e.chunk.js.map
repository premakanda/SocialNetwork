{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/images/user.png","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","dialogs","name","messages","dialogsReducer","body","newMessageBody","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","fake","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","NavLink","to","activeClassName","activeLink","active","DialogItem","props","path","dialog","Message","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","d","key","messagesElements","m","dialogsItems","values","sendMessage","Redirect","mapStateToPropsForRedirect","compose","connect","sendMessageCreator","Component","RedirectComponent","this","React","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","e","onPageChanged","src","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","style","backgroundColor","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","log","followSuccess","unfollowSuccess","page","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","Post","maxLength10","AddNewPostFormRedux","MyPosts","postsElements","createRef","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","Route","render","DialogsContainer","promise","Promise","all","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,oBCDrFD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,qGCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,wCCW9JC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BCfAC,E,OAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAa,CACT,UAAW,0CAKNC,EAAW,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOP,EAASQ,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBN,EAAW,SAObO,GACH,OAAOZ,EAASa,KAAT,iBAAwBD,KAR1BP,EAAW,SAUXO,GACL,OAAOZ,EAASc,OAAT,iBAA0BF,KAX5BP,EAAW,SAaTO,GAEP,OADAG,QAAQC,KAAK,8CACNC,EAAWC,WAAWN,IAIxBK,EAAa,CACtBC,WADsB,SACXN,GACP,OAAOZ,EAASQ,IAAI,WAAaI,IAErCO,UAJsB,SAIZP,GACN,OAAOZ,EAASQ,IAAI,kBAAoBI,IAE5CQ,aAPsB,SAOTC,GACT,OAAOrB,EAASsB,IAAT,iBAA+B,CAAED,OAAQA,MAI3CE,EAAU,WAEf,OAAOvB,EAASQ,IAAT,YAFFe,EAAU,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO1B,EAASa,KAAT,aAA4B,CAAEW,QAAOC,WAAUC,gBALjDH,EAAU,WAQf,OAAOvB,EAASc,OAAT,eC7CXa,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,WAAY,IACjD,CAACF,GAAI,EAAGC,QAAS,qBAAuBC,WAAY,IACpD,CAACF,GAAI,EAAGC,QAAS,SAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,OAAQC,WAAY,KAEzCC,QAAS,KACTX,OAAQ,IAmCCY,EAAY,SAACZ,GAAD,MAAa,CAACa,KA7CpB,aA6CsCb,WAwB1Cc,EAxDQ,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAErD,OAAOA,EAAOH,MACV,IAlBS,WAmBL,IAAII,EAAU,CACVT,GAAI,EACJC,QAASO,EAAOE,YAChBR,WAAY,GAEhB,OAAO,eACAK,EADP,CAEIR,MAAM,GAAD,mBAAMQ,EAAMR,OAAZ,CAAmBU,IACxBC,YAAa,KAGrB,IA5BW,aA6BP,OAAO,eACAH,EADP,CAEIf,OAAQgB,EAAOhB,SAGvB,IAnCiB,mBAoCb,OAAO,eAAIe,EAAX,CAAkBJ,QAASK,EAAOL,UAEtC,QACI,OAAOI,ICxCfT,EAAe,CACfa,QAAS,CACL,CAACX,GAAI,EAAGY,KAAM,UACd,CAACZ,GAAI,EAAGY,KAAM,UACd,CAACZ,GAAI,EAAGY,KAAM,SACd,CAACZ,GAAI,EAAGY,KAAM,SACd,CAACZ,GAAI,EAAGY,KAAM,UACd,CAACZ,GAAI,EAAGY,KAAM,WAElBC,SAAU,CACN,CAACb,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,6BACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,QAoBVa,EAhBQ,WAAmC,IAAlCP,EAAiC,uDAAzBT,EAAcU,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAtBa,eAuBT,IAAIU,EAAOP,EAAOQ,eAClB,OAAO,eACAT,EADP,CAEIM,SAAS,GAAD,mBAAMN,EAAMM,UAAZ,CAAsB,CAACb,GAAI,EAAGC,QAASc,OAEvD,QACI,OAAOR,IC7BfT,EAAe,GAMJmB,EAJQ,WAAmC,IAAlCV,EAAiC,uDAAzBT,EAAyB,iCACrD,OAAOS,GCOPT,EAAe,CACfoB,MAAO,GACPxC,SAAU,EACVyC,gBAAiB,EACjB1C,YAAa,EACb2C,YAAY,EACZC,oBAAqB,GACrBC,KAAM,IAuDGC,EAAiB,SAAC9C,GAAD,MAAkB,CAAC4B,KAnExB,mBAmEgD5B,gBAE5D+C,EAAmB,SAACJ,GAAD,MAAiB,CAACf,KAnEvB,qBAmEiDe,eAC/DK,EAA0B,SAACL,EAAYrC,GAAb,MAAyB,CAACsB,KAnE5B,+BAmEgEe,aAAYrC,WAuClG2C,EA9FM,WAAmC,IAAlCnB,EAAiC,uDAAzBT,EAAcU,EAAW,uCACnD,OAAOA,EAAOH,MACV,IAAK,OAAQ,OAAO,eAAIE,EAAX,CAAkBe,KAAMf,EAAMe,KAAO,IAClD,IArBO,SAsBH,OAAO,eACAf,EADP,CAEIW,MAAOX,EAAMW,MAAMS,KAAK,SAAAC,GACpB,OAAIA,EAAE5B,KAAOQ,EAAOzB,OACT,eAAI6C,EAAX,CAAcC,UAAU,IAErBD,OAGnB,IA9BS,WA+BL,OAAO,eACArB,EADP,CAEIW,MAAOX,EAAMW,MAAMS,KAAK,SAAAC,GACpB,OAAIA,EAAE5B,KAAOQ,EAAOzB,OACT,eAAI6C,EAAX,CAAcC,UAAU,IAErBD,OAGnB,IAvCU,YAwCN,OAAO,eAAKrB,EAAZ,CAAmBW,MAAOV,EAAOU,QAErC,IAzCiB,mBA0Cb,OAAO,eAAKX,EAAZ,CAAmB9B,YAAa+B,EAAO/B,cAE3C,IA3CsB,wBA4ClB,OAAO,eAAK8B,EAAZ,CAAmBY,gBAAiBX,EAAOsB,QAE/C,IA7CmB,qBA8Cf,OAAO,eAAKvB,EAAZ,CAAmBa,WAAYZ,EAAOY,aAE1C,IA/C6B,+BAgDzB,OAAO,eACAb,EADP,CAEIc,oBAAqBb,EAAOY,WAAP,sBACXb,EAAMc,qBADK,CACgBb,EAAOzB,SACtCwB,EAAMc,oBAAoBU,QAAO,SAAA/B,GAAE,OAAIA,GAAMQ,EAAOzB,YAGlE,QACI,OAAOwB,I,QC1DfT,EAAe,CACff,OAAQ,KACRY,MAAO,KACPqC,MAAO,KACPC,QAAQ,GAiBCC,EAAkB,SAACnD,EAAQY,EAAOqC,EAAOC,GAAvB,MAAmC,CAAC5B,KAxB7C,gBAwBkE8B,QAChF,CAACpD,SAAQY,QAAOqC,QAAOC,YAElBG,EAAkB,kBAAM,SAACC,GAClC,OAAO3C,IACFd,MAAK,SAAAC,GACF,GAAiC,IAA7BA,EAASC,KAAKwD,WAAkB,CAAC,IAAD,EACPzD,EAASC,KAAKA,KAAlCkB,EAD2B,EAC3BA,GAAIgC,EADuB,EACvBA,MAAOrC,EADgB,EAChBA,MAChB0C,EAASH,EAAgBlC,EAAIL,EAAOqC,GAAO,UA4B5CO,EAlDK,WAAmC,IAAlChC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAClD,OAAQA,EAAOH,MACX,IAZc,gBAaV,OAAO,eACAE,EADP,GAEOC,EAAO2B,SAGlB,QACI,OAAO5B,I,kBCffT,EAAe,CACf0C,aAAa,GA+BFC,EA5BI,WAAmC,IAAlClC,EAAiC,uDAAzBT,EAAcU,EAAW,uCACjD,OAAQA,EAAOH,MACX,IAToB,sBAUhB,OAAO,eACAE,EADP,CAEIiC,aAAa,IAGrB,QACI,OAAOjC,ICVfmC,EAAWC,YAAgB,CAC3BC,YAAatC,EACbuC,YAAa/B,EACbgC,QAAS7B,EACT8B,UAAWrB,EACXsB,KAAMT,EACNU,KAAMC,IACNC,IAAKV,IAGLW,EAAQC,YAAYX,EAAUY,YAAgBC,MAElDxF,OAAOqF,MAAQA,EAGAA,Q,sHCKAI,EA1BA,WACX,OACI,yBAAKC,UAAWC,IAAEC,KACd,yBAAKF,UAAWC,IAAEE,MACd,kBAACC,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,YAEJ,yBAAKP,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEO,SAC3B,kBAACJ,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,YAA1C,aAEJ,yBAAKP,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEO,SAC3B,kBAACJ,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAEM,YAAxC,UAGJ,yBAAKP,UAAWC,IAAEE,MACd,oCAEJ,yBAAKH,UAAWC,IAAEE,MACd,qCAEJ,yBAAKH,UAAWC,IAAEE,MACd,0C,sCCZDM,GARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAMnE,GAE/B,OAAO,yBAAKyD,UAAWC,KAAEW,OAAS,IAAMX,KAAEO,QACtC,kBAACJ,EAAA,EAAD,CAASC,GAAIM,GAAOD,EAAMvD,QCDnB0D,GAJC,SAACH,GACb,OAAO,yBAAKV,UAAWC,KAAEW,QAASF,EAAMlE,U,2DCDtCsE,GAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBN,GAAW,EAArBO,MAAqB,0CAC9CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKpB,UAAWqB,KAAOC,YAAc,KAAOJ,EAAWG,KAAOD,MAAQ,KAClE,6BACKV,EAAMa,UAETL,GAAY,8BAAOF,EAAKI,SAKzBI,GAAW,SAACd,GAAW,IACzBK,EAAoCL,EAApCK,MAAuBU,GAAaf,EAA7BM,KAA6BN,EAAvBO,MADW,aACYP,EADZ,2BAE/B,OAAO,kBAAC,GAAgBA,EAAO,8CAAcK,EAAWU,MAG/CC,GAAQ,SAAChB,GAAW,IACtBK,EAAoCL,EAApCK,MAAuBU,GAAaf,EAA7BM,KAA6BN,EAAvBO,MADQ,aACeP,EADf,2BAE5B,OAAO,kBAAC,GAAgBA,EAAO,2CAAWK,EAAWU,MCtB5CE,GAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,GAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cCF5BE,GAAcH,GAAiB,IAiBtBI,gBAAU,CAACzC,KAAM,2BAAjByC,EAfQ,SAACvB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BACI,kBAACC,GAAA,EAAD,CAAOC,UAAWb,GACXc,SAAU,CAACX,GAAUK,IACrBO,YAAY,qBAAqBpF,KAAK,oBAEjD,6BACI,gDCoBDqF,GA5BC,SAAC9B,GAEb,IAAI5D,EAAQ4D,EAAMtB,YAEdqD,EAAkB3F,EAAMI,QAAQgB,KAAK,SAAAwE,GAAC,OAAI,kBAAC,GAAD,CAAYvF,KAAMuF,EAAEvF,KAAMwF,IAAKD,EAAEnG,GAAIA,GAAImG,EAAEnG,QACrFqG,EAAmB9F,EAAMM,SAASc,KAAK,SAAA2E,GAAC,OAAI,kBAAC,GAAD,CAASrG,QAASqG,EAAErG,QAASmG,IAAKE,EAAEtG,QAC/DO,EAAMS,eAM3B,OAAKmD,EAAMlC,OAGP,yBAAKwB,UAAWC,KAAE/C,SACd,yBAAK8C,UAAWC,KAAE6C,cACZL,GAEN,yBAAKzC,UAAWC,KAAE7C,UACd,6BAAOwF,IAGX,kBAAC,GAAD,CAAgBV,SAfJ,SAACa,GACjBrC,EAAMsC,YAAYD,EAAOxF,oBAGH,kBAAC0F,GAAA,EAAD,CAAU5C,GAAI,Y,QChBxC6C,GAA6B,SAACpG,GAAD,MAAY,CACzC0B,OAAQ1B,EAAMyC,KAAKf,SCgBR2E,eACXC,cAdkB,SAACtG,GACnB,MAAO,CACHsC,YAAatC,EAAMsC,gBAGF,SAACR,GACtB,MAAO,CACHoE,YAAa,SAACzF,GACVqB,EdiBsB,SAACrB,GAAD,MAAqB,CAACX,KAjCnC,eAiCuDW,kBcjBvD8F,CAAmB9F,UDRR,SAAC+F,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAK9C,MAAMlC,OAET,kBAAC8E,EAAcE,KAAK9C,OAFI,kBAACuC,GAAA,EAAD,CAAU5C,GAAG,eAJT,GAEXoD,IAAMH,WAUtC,OAFqCF,aAAQF,GAARE,CAAoCG,KCG9DJ,CAGbX,I,yCCoCakB,GAvDH,SAAChD,GAKT,IAHA,IAAIiD,EAAaC,KAAKC,KAAKnD,EAAMhD,gBAAkBgD,EAAMzF,UAErD6I,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAIf,OAAO,6BACH,6BACKD,EAAM5F,KAAI,SAAA+F,GACP,OAAO,0BAAMjE,UAAWU,EAAM1F,cAAgBiJ,GAAK5C,KAAO6C,aAC7CC,QAAS,SAACC,GACN1D,EAAM2D,cAAcJ,KACpBA,OAIrBvD,EAAMjD,MAAMS,KAAI,SAAAC,GAAC,OAAI,yBAAKwE,IAAKxE,EAAE5B,IAC7B,8BACI,6BACG,kBAAC6D,EAAA,EAAD,CAASC,GAAI,YAAclC,EAAE5B,IAC5B,yBAAK+H,IAAuB,MAAlBnG,EAAEoG,OAAOC,MAAgBrG,EAAEoG,OAAOC,MAAQC,KAC/CzE,UAAWqB,KAAOoD,cAG3B,6BACKtG,EAAEC,SACG,4BAAQsG,SAAUhE,EAAM9C,oBACrB+G,MAAK,SAAApI,GAAE,OAAIA,IAAO4B,EAAE5B,MACf4H,QAAS,WAAQzD,EAAMkE,SAASzG,EAAE5B,MAF1C,YAIA,4BAAQmI,SAAUhE,EAAM9C,oBAAoB+G,MAAK,SAAApI,GAAE,OAAIA,IAAO4B,EAAE5B,MACxD4H,QAAS,WAAQzD,EAAMmE,OAAO1G,EAAE5B,MADxC,YAMd,8BACI,8BACI,6BAAM4B,EAAEhB,MACR,6BAAMgB,EAAEpC,SAEZ,8BACI,6BAAM,sBACN,6BAAM,2B,qBC3Cf+I,GANC,SAACpE,GACb,OAAO,yBAAMqE,MAAQ,CAAEC,gBAAiB,UACpC,yBAAKV,IAAKW,S,UCCLC,GAAWC,cAJC,SAACrI,GACtB,OAAOA,EAAMwC,UAAU7B,SAIvB,SAACA,GACD,OAAOA,EAAMa,QAAO,SAAAH,GAAC,OAAI,QAGhBiH,GAAc,SAACtI,GACxB,OAAOA,EAAMwC,UAAUrE,UAGdoK,GAAqB,SAACvI,GAC/B,OAAOA,EAAMwC,UAAU5B,iBAGd4H,GAAiB,SAACxI,GAC3B,OAAOA,EAAMwC,UAAUtE,aAGduK,GAAgB,SAACzI,GAC1B,OAAOA,EAAMwC,UAAU3B,YAEd6H,GAAyB,SAAC1I,GACnC,OAAOA,EAAMwC,UAAU1B,qBCNrB6H,G,2MAKFpB,cAAgB,SAACqB,GACb,EAAKhF,MAAMwE,SAASQ,EAAY,EAAKhF,MAAMzF,W,mFAJ3CuI,KAAK9C,MAAMwE,SAAS1B,KAAK9C,MAAM1F,YAAawI,KAAK9C,MAAMzF,Y,+BASvD,OADAQ,QAAQkK,IAAI,SACL,oCACDnC,KAAK9C,MAAM/C,WAAa,kBAAC,GAAD,MAAgB,KAC1C,kBAAC,GAAD,CAAOD,gBAAiB8F,KAAK9C,MAAMhD,gBACvBzC,SAAUuI,KAAK9C,MAAMzF,SACrBD,YAAawI,KAAK9C,MAAM1F,YACxBqJ,cAAeb,KAAKa,cACpB5G,MAAO+F,KAAK9C,MAAMjD,MAClBoH,OAAQrB,KAAK9C,MAAMmE,OACnBD,SAAUpB,KAAK9C,MAAMkE,SACrBhH,oBAAqB4F,KAAK9C,MAAM9C,2B,GApB3B6F,IAAMH,WAiDpBH,eACXC,cAdkB,SAACtG,GAEnB,OADDrB,QAAQkK,IAAI,yBACJ,CACHlI,MAAOyH,GAASpI,GAChB7B,SAAUmK,GAAYtI,GACtBY,gBAAiB2H,GAAmBvI,GACpC9B,YAAasK,GAAexI,GAC5Ba,WAAY4H,GAAczI,GAC1Bc,oBAAqB4H,GAAuB1I,MAMxB,CAAC+H,OhBkBP,SAACvJ,GACnB,OAAO,SAACsD,GACJA,EAASZ,GAAwB,EAAM1C,IACvCP,EAAgBO,GACXH,MAAK,SAAAC,GAC8B,GAA5BA,EAASC,KAAKwD,YACdD,EA1BS,SAACtD,GAAD,MAAa,CAACsB,KAnE5B,SAmE0CtB,UA0B5BsK,CAActK,IAE3BsD,EAASZ,GAAwB,EAAO1C,SgB1BnBsJ,ShB8Bb,SAACtJ,GACrB,OAAO,SAACsD,GACJA,EAASZ,GAAwB,EAAM1C,IACvCP,EAAkBO,GACbH,MAAK,SAAAC,GAC8B,GAA5BA,EAASC,KAAKwD,YACdD,EArCW,SAACtD,GAAD,MAAa,CAACsB,KAnE5B,WAmE4CtB,UAqChCuK,CAAgBvK,IAE7BsD,EAASZ,GAAwB,EAAO1C,SgBtCTwC,iBAAgBE,0BAAyBkH,ShBM5D,SAACY,EAAM7K,GAC/B,OAAO,SAAC2D,GACJA,EAASb,GAAiB,IAC1Ba,EAASd,EAAegI,IAExB/K,EAAkB+K,EAAM7K,GAAUE,MAAK,SAAAE,GACnCuD,EAASb,GAAiB,IAC1Ba,EAbwB,CAAChC,KAnEnB,YAmEoCa,MAaxBpC,EAAK0K,QACvBnH,EAZ4C,CAAChC,KAnE3B,wBAmEwDyB,MAY9ChD,EAAK2K,oBgBf9B7C,CAEbsC,I,wBCrE0BhC,IAAMH,U,OCwCnB2C,GAvCgB,SAACvF,GAAW,IAAD,EACRwF,oBAAS,GADD,oBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASxF,EAAM3E,QAFH,oBAEjCA,EAFiC,KAEzBY,EAFyB,KAItC0J,qBAAW,WACP1J,EAAU+D,EAAM3E,UACjB,CAAC2E,EAAM3E,SAeV,OACI,8BACOoK,GACH,6BACI,0BAAMG,cAjBO,WACrBF,GAAY,KAgBsC1F,EAAM3E,QAAU,YAG7DoK,GACD,6BACI,2BAAOI,SAbI,SAACnC,GACpBzH,EAAUyH,EAAEoC,cAAc5E,QAYe6E,WAAW,EAAMC,OAlBnC,WACvBN,GAAY,GACZ1F,EAAM5E,aAAaC,IAiBJ6F,MAAO7F,OCVf4K,GAnBK,SAACjG,GACjB,OAAKA,EAAMhE,QAKP,6BAKI,yBAAKsD,UAAWC,KAAE2G,kBACd,yBAAKtC,IAAK5D,EAAMhE,QAAQ6H,OAAOsC,QAC/B,kBAAC,GAAD,CAAwB9K,OAAQ2E,EAAM3E,OAAQD,aAAc4E,EAAM5E,iBAXnE,kBAAC,GAAD,O,yCCOAgL,GAZF,SAACpG,GACZ,OACE,yBAAKV,UAAWC,KAAEE,MAChB,yBAAKmE,IAAI,4FACL5D,EAAMlE,QACN,6BACF,sCADE,IACkBkE,EAAMjE,cCF5BsK,GAAclF,GAAiB,IAcjCmF,GAAsB/E,aAAU,CAACzC,KAAM,yBAAjByC,EAZL,SAACvB,GAClB,OAAO,0BAAMwB,SAAUxB,EAAMyB,cACzB,6BACI,kBAACC,GAAA,EAAD,CAAOjF,KAAK,cAAckF,UAAWb,GAAUe,YAAa,eACrDD,SAAU,CAACX,GAAUoF,OAEhC,6BACI,iDA8BGE,GAvBC,SAACvG,GACb,IAAIwG,EACAxG,EAAMpE,MAAM4B,KAAK,SAAA+F,GAAC,OAAI,kBAAC,GAAD,CAAMzH,QAASyH,EAAEzH,QAASC,WAAYwH,EAAExH,gBAE7CgH,IAAM0D,YAM3B,OACI,yBAAKnH,UAAWC,KAAEmH,YACd,wCACA,kBAACJ,GAAD,CAAqB9E,SAPb,SAACa,GACbrC,EAAM2G,QAAQtE,EAAO9F,gBAOjB,yBAAK+C,UAAWC,KAAE3D,OACb4K,KChBFI,GAFUlE,cAfD,SAACtG,GACrB,MAAO,CACHR,MAAOQ,EAAMqC,YAAY7C,MACzBW,YAAaH,EAAMqC,YAAYlC,gBAIZ,SAAC2B,GACxB,MAAO,CACHyI,QAAS,SAACpK,GACN2B,EzBgCwB,SAAC3B,GAAD,MAAkB,CAACL,KA7CtC,WA6CsDK,eyBhClDsK,CAAqBtK,QAKjBmG,CAA6C6D,ICPvDO,GATC,SAAC9G,GACb,OACI,6BACI,kBAAC,GAAD,CAAahE,QAASgE,EAAMhE,QAASX,OAAQ2E,EAAM3E,OAAQD,aAAc4E,EAAM5E,eAC/E,kBAAC,GAAD,QCDN2L,G,4LAGE,IAAInM,EAASkI,KAAK9C,MAAMjG,MAAMiN,OAAOpM,OAChCA,IACDA,EAASkI,KAAK9C,MAAMiH,mBAEhBnE,KAAK9C,MAAMkH,QAAQ5D,KAAK,UAGhCR,KAAK9C,MAAMmH,eAAevM,GAC1BkI,KAAK9C,MAAM7E,UAAUP,K,+BAKrB,OACI,kBAAC,GAAD,iBAAakI,KAAK9C,MAAlB,CACShE,QAAS8G,KAAK9C,MAAMhE,QACpBX,OAAQyH,KAAK9C,MAAM3E,OACnBD,aAAc0H,KAAK9C,MAAM5E,oB,GApBf2H,IAAMH,WAmCtBH,eACXC,cAXkB,SAACtG,GAEnB,MAAQ,CACJJ,QAASI,EAAMqC,YAAYzC,QAC3BX,OAAQe,EAAMqC,YAAYpD,OAC1B4L,iBAAkB7K,EAAMyC,KAAKjE,OAC7BkD,OAAQ1B,EAAMyC,KAAKf,UAKE,CAACqJ,e3BQA,SAACvM,GAAD,OAAY,SAACsD,GACvC7D,EAAoBO,GAAQH,MAAK,SAAAC,GAC7BwD,EALoC,CAAChC,KA7CpB,mBA6C4CF,QAKrCtB,EAASC,Y2BVKQ,U3BcrB,SAACP,GAAD,OAAY,SAACsD,GAClCjD,EAAWE,UAAUP,GAChBH,MAAK,SAAAC,GACFwD,EAASjC,EAAUvB,EAASC,Y2BjBiBS,a3BqB7B,SAACC,GAAD,OAAY,SAAC6C,GACrCjD,EAAWG,aAAaC,GACnBZ,MAAK,SAAAC,GAC+B,IAA7BA,EAASC,KAAKwD,YACdD,EAASjC,EAAUZ,W2BxB/B+L,IAFW3E,CAGbsE,I,oBC7BaM,GAZA,SAACrH,GACZ,OAAO,4BAAQV,UAAWC,KAAE+H,QACxB,yBAAK1D,IAAI,6DAET,yBAAKtE,UAAWC,KAAEgI,YACZvH,EAAMlC,OACF,6BAAMkC,EAAMnC,MAAZ,MAAqB,4BAAQ4F,QAASzD,EAAMwH,QAAvB,WAArB,KACA,kBAAC9H,EAAA,EAAD,CAASC,GAAI,UAAb,YCNZ8H,G,iLAIE,OAAO,kBAAC,GAAW3E,KAAK9C,W,GAJF+C,IAAMH,WAYrBF,iBALS,SAACtG,GAAD,MAAY,CAChC0B,OAAQ1B,EAAMyC,KAAKf,OACnBD,MAAOzB,EAAMyC,KAAKhB,SAGkB,CAAC2J,OzBqCnB,kBAAM,SAACtJ,GACzB3C,IACKd,MAAK,SAAAC,GAC+B,IAA7BA,EAASC,KAAKwD,YACdD,EAASH,EAAgB,KAAM,KAAM,MAAM,UyBzC5C2E,CAAmC+E,ICmB5CC,GAAkBnG,aAAU,CAACzC,KAAM,SAAjByC,EA3BN,SAACvB,GACf,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BACI,kBAACC,GAAA,EAAD,CAAOG,YAAa,QAASpF,KAAM,QAC5BmF,SAAU,CAACX,IACXU,UAAWX,MAEtB,6BACI,kBAACU,GAAA,EAAD,CAAOG,YAAa,WAAYpF,KAAM,WAAYP,KAAM,WACjD0F,SAAU,CAACX,IACXU,UAAWX,MAEtB,6BACI,kBAACU,GAAA,EAAD,CAAOC,UAAWX,GAAOvE,KAAM,aAAcP,KAAM,aADvD,gBAGE8D,EAAMU,OAAS,yBAAKpB,UAAW+E,KAAMsD,kBAClC3H,EAAMU,OAGX,6BACI,8CA0BDgC,iBAJS,SAACtG,GAAD,MAAY,CAChC0B,OAAQ1B,EAAMyC,KAAKf,UAGiB,CAACD,M1BhBpB,SAACrC,EAAOC,EAAUC,GAAlB,OAAiC,SAACwC,GAEnD3C,EAAcC,EAAOC,EAAUC,GAC1BjB,MAAK,SAAAC,GACF,GAAiC,IAA7BA,EAASC,KAAKwD,WACdD,EAASD,SACN,CACH,IAAInC,EAAUpB,EAASC,KAAK+B,SAAS2E,OAAS,EAAI3G,EAASC,KAAK+B,SAAS,GAAK,aAC9EwB,EAAS0J,YAAW,QAAS,CAACC,OAAQ/L,Y0BQvC4G,EAlBD,SAAC1C,GAKX,OAAIA,EAAMlC,OACC,kBAACyE,GAAA,EAAD,CAAU5C,GAAI,aAGlB,6BACH,qCACA,kBAAC+H,GAAD,CAAgBlG,SAVH,SAACsG,GACd9H,EAAMnC,MAAMiK,EAAStM,MAAOsM,EAASrM,SAAUqM,EAASpM,mBC1B1DqM,G,4LAEEjF,KAAK9C,MAAMgI,kB,+BAIX,OAAKlF,KAAK9C,MAAM3B,YAKZ,yBAAKiB,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC2I,EAAA,EAAD,CAAOhI,KAAK,WACLiI,OAAQ,kBAAM,kBAACC,GAAD,SAErB,kBAACF,EAAA,EAAD,CAAOhI,KAAK,oBACLiI,OAAQ,kBAAM,kBAAC,GAAD,SAErB,kBAACD,EAAA,EAAD,CAAOhI,KAAK,SACLiI,OAAQ,kBAAM,kBAAC,GAAD,SAErB,kBAACD,EAAA,EAAD,CAAOhI,KAAK,SACLiI,OAAQ,kBAAM,kBAAC,GAAD,WAlBtB,kBAAC,GAAD,U,GAPDtF,aAoCHH,eACX2E,IACA1E,cANoB,SAACtG,GAAD,MAAY,CAChCiC,YAAajC,EAAM4C,IAAIX,eAKE,CAAC2J,c1BzBD,kBAAM,SAAC9J,GAChC,IAAIkK,EAAUlK,EAASD,KAIvBoK,QAAQC,IAAI,CAACF,IACR3N,MAAK,WACFyD,EAT6B,CAAChC,KArBd,+B0B8CbuG,CAEgCsF,I,UC3C/CQ,IAASL,OACL,kBAACM,GAAA,EAAD,KACI,kBAAC,KAAD,CAAUvJ,MAAOA,GACb,kBAAC,GAAD,QAEUwJ,SAASC,eAAe,SlCmHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpO,MAAK,SAAAqO,GACjCA,EAAaC,iB,mBmClInBtP,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,iBAAmB,wC,mBCArCD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,8B,mBCAtED,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,mBCAnED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,8B","file":"static/js/main.0b2f3c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2M5ou\",\"item\":\"Navbar_item__2BheX\",\"activeLink\":\"Navbar_activeLink__2H-Bf\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__lVcoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3rBgZ\",\"dialogsItems\":\"Dialogs_dialogsItems__1sKeK\",\"active\":\"Dialogs_active__aR4EZ\",\"messages\":\"Dialogs_messages__2F0xW\",\"message\":\"Dialogs_message__xL8li\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"a5358ace-4ecb-440c-9225-23342cbb6a67\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FAKE\": return {...state, fake: state.fake + 1}\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}  });\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n            }\r\n        });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send222</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress\r\n                                .some(id => id === u.id)}\r\n                                      onClick={() => { props.unfollow(u.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                      onClick={() => { props.follow(u.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"USERS\");\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n   console.log('mapStateToProps USERS')\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}\r\n                               onBlur={ this.deactivateEditMode.bind(this) }\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {/*  <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={() => <DialogsContainer/>}/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1qoZ0\",\"error\":\"FormsControls_error__3epaE\",\"formSummaryError\":\"FormsControls_formSummaryError__3ardS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2YUy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__KCRac\",\"selectedPage\":\"users_selectedPage__NKCyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__dAjUf\",\"posts\":\"MyPosts_posts__2-LiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yJW6\",\"loginBlock\":\"Header_loginBlock__3OpvL\"};"],"sourceRoot":""}